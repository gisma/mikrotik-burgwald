name: TTN all devices → Pages

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

permissions:
  contents: write

# ⬇️ verhindert parallele Läufe, die sich gegenseitig wegpushen
concurrency:
  group: ttn-pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TTN_APP_ID:  ${{ secrets.TTN_APP_ID }}
      TTN_REGION:  ${{ secrets.TTN_REGION }}
      TTN_API_KEY: ${{ secrets.TTN_API_KEY }}
      # optional: Standard-Theme
      THEME_DEFAULT: "light"

    steps:
      - name: Checkout (full history for rebase)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas plotly pyarrow python-dotenv

      - name: Build dashboard (pull all devices)
        run: |
          python scripts/pull_all_devices.py
          mkdir -p docs/assets
          cp -r assets/* docs/assets/

      # ⬇️ sicher committen: erst rebase, dann push
      - name: Commit /docs and /data (with rebase)
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          set -e
          git config user.name  "ttn-bot"
          git config user.email "ttn-bot@example.com"

          # falls Runner auf detached HEAD steht, Branch sicherstellen
          git checkout "$BRANCH"

          # remote-Änderungen holen & REBASE statt Merge
          git pull --rebase origin "$BRANCH" || true

          git add docs/ data/ || true
          # keine Fehlermeldung, wenn nichts zu committen ist
          git commit -m "update all-devices $(date -u +%FT%TZ)" || echo "no changes"

          # finaler Push
          git push origin "$BRANCH"
