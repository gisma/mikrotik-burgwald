name: TTN hourly + Quarto

on:
  schedule:
    - cron: "0 * * * *"     # stündlich (UTC)
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: site-build
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TTN_APP_ID:  ${{ secrets.TTN_APP_ID }}
      TTN_REGION:  ${{ secrets.TTN_REGION }}
      TTN_API_KEY: ${{ secrets.TTN_API_KEY }}
      DEVICES:     ${{ secrets.TTN_DEVICES }}   # optional
      TTN_AFTER_DAYS: "2"
      DEBUG_RECENT_MINUTES: "90"
      ASSETS_BUILD_SUBDIR: "build"              # Script schreibt nach assets/build/

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install requests pandas plotly pyarrow python-dotenv

      # === A) Stundenlauf: echte Pulls + Build ===
      - name: Pull TTN + build dashboard (hourly)
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          set -e
          # für Erstläufe: größeres Fenster
          RUN_DASH=1 TTN_AFTER_DAYS=7 python scripts/pull_all_devices.py

      # === B) Content-Push: nur offline neu rendern (keine HTTP-Calls) ===
      - name: Rebuild dashboard (offline, content push)
        if: github.event_name == 'push'
        run: |
          set -e
          OFFLINE=1 RUN_DASH=1 python scripts/pull_all_devices.py

      # CSS neben data.html legen (gilt für beide Fälle)
      - name: Ensure dashboard.css in build/
        run: |
          mkdir -p assets/build
          if [ -f assets/templates/dashboard.css ]; then
            cp -f assets/templates/dashboard.css assets/build/dashboard.css
          fi
          ls -la assets/build || true

      # Laufzeit-Assets + Daten nach docs/
      - name: Prepare docs/
        run: |
          set -e
          mkdir -p docs/assets docs/data
          # Runtime-HTML/CSS
          if compgen -G "assets/build/*" > /dev/null; then
            rsync -a --delete assets/build/ docs/assets/
          fi
          # Datenartefakte
          cp -a data/*.parquet docs/data/ 2>/dev/null || true
          cp -a data/*.csv     docs/data/ 2>/dev/null || true
          cp -a data/*.ndjson  docs/data/ 2>/dev/null || true

          # Mini-Index
          python - << 'PY'
          import json, pathlib
          d = pathlib.Path("docs/data"); d.mkdir(parents=True, exist_ok=True)
          items=[]
          for p in sorted(d.glob("*")):
              suf=p.suffix.lower()
              if suf not in (".parquet",".csv",".ndjson"): continue
              st=p.stat()
              items.append({"name":p.name,"size":st.st_size,"mtime":int(st.st_mtime),
                            "type":"Parquet" if suf==".parquet" else "CSV" if suf==".csv" else "NDJSON"})
          (d/"index.json").write_text(json.dumps(items, ensure_ascii=False), encoding="utf-8")
          PY

          touch docs/.nojekyll

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render site (Quarto)
        env:
          OFFLINE: "1"   # falls du Python-Blocks in QMD hast -> keine zusätzlichen Calls
        run: |
          set -e
          quarto render --no-cache
          ls -lAh docs || true

      - name: Commit & push
        env:
          GIT_AUTHOR_NAME:  site-bot
          GIT_AUTHOR_EMAIL: site-bot@example.com
          GIT_COMMITTER_NAME:  site-bot
          GIT_COMMITTER_EMAIL: site-bot@example.com
        run: |
          set -e
          git add docs/ data/ || true
          git commit -m "site build ${GITHUB_SHA::7} $(date -u +%Y-%m-%dT%H:%M:%SZ)" || echo "no changes"
          git push

