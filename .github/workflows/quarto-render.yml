name: Build and Publish Quarto

on:
  push:
    branches: [ "main" ]
    paths:
      - "**.qmd"
      - "_quarto.yml"
      - "data/**"
      - "scripts/**"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: quarto-render
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- Python (für dein TTN-Skript) ---
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas plotly

      # --- R + Pakete für knitr/rmarkdown ---
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "release"
          use-public-rspm: true

      - name: Install R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::knitr
            any::rmarkdown
            any::here

      # --- Quarto ---
      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          tinytex: false

      # --- Devices automatisch ermitteln ---
      - name: Detect devices from data/
        id: devices
        run: |
          DEVICES=$(ls data/*.parquet 2>/dev/null | xargs -n1 basename | sed 's/\.parquet$//' | tr '\n' ' ')
          echo "DEVICES=$DEVICES" >> $GITHUB_ENV
          echo "Devices auto-detected: $DEVICES"

      # --- Render ---
      - name: Render Quarto
        env:
          TTN_APP_ID:     ${{ vars.TTN_APP_ID }}
          TTN_REGION:     ${{ vars.TTN_REGION }}
          TTN_API_KEY:    ${{ secrets.TTN_API_KEY }}
          DEVICES:        ${{ env.DEVICES }}
          TTN_AFTER_DAYS: ${{ vars.TTN_AFTER_DAYS || 2 }}
        run: quarto render

      # --- Commit nach docs/ ---
      - name: Commit rendered site
        run: |
          git config user.name  "quarto-bot"
          git config user.email "quarto-bot@example.com"
          git add docs || true
          git commit -m "Publish rendered site" || echo "no changes"
          git push || true
